package parser.objects;

import java.util.ArrayList;

import lexer.Token;

public class Statement {
	private static int postIndex;
	private static PrintStatement printStatement;
	private static AssignmentStatement assignmentStatement;
	private static VarDecl varDecl;
	private static WhileStatement whileStatement;
	private static IfStatement ifStatement;
	private static Block block;
	public Statement() {
		printStatement = new PrintStatement();
		assignmentStatement = new AssignmentStatement();
		varDecl = new VarDecl();
		whileStatement = new WhileStatement();
		ifStatement = new IfStatement();
		block = new Block();
	}
	
	public static boolean validateStatement(ArrayList<Token> tokens, int currIndex){ 
		if (printStatement.validatePrintStatement(tokens, currIndex)) {
			postIndex = printStatement.getPostIndex();
			return true;
		} else if (assignmentStatement.validate(tokens, currIndex)) {
			postIndex = assignmentStatement.getPostIndex();
			return true;
		} else if (varDecl.validate(tokens, currIndex)) {
			postIndex = varDecl.getPostIndex();
			return true;
		} else if (whileStatement.validate(tokens, currIndex)) {
			postIndex = whileStatement.getPostIndex();
			return true;
		} else if (ifStatement.validate(tokens, currIndex)) {
			postIndex = ifStatement.getPostIndex();
			return true;
		} else if (block.validateBlock(tokens, currIndex)) {
			postIndex = block.getPostIndex();
			return true;
		} else {
			return false; // ERROR ON STATEMENT
		}
	}
}
